name: Generate UML
on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  generate-uml:
    name: 'Generate UML'
    runs-on: ubuntu-latest
    env:
      CODE_PATH: "./Assets/Scripts/"
      UML_OUTPUT_PATH: "./UML/"
      UMP_GENERATION_PARAMETERS: -public -createAssociation -allInOne
    steps:
      - uses: actions/checkout@v3

      - name: Remove old diagrams
        run: rm -r ${{ env.UML_OUTPUT_PATH }} || true

      - name: Check if there is code
        run: |
          if [ -d "${{ env.CODE_PATH }}" ]; then
            echo "CODE_EXISTS=true" >> $GITHUB_ENV
          else
            echo "CODE_EXISTS=false" >> $GITHUB_ENV
          fi
        id: check_for_code

      - uses: actions/setup-dotnet@v3
        if: env.CODE_EXISTS == 'true'
        with:
          dotnet-version: 5.0.x

      - name: Install PlantUML Generator
        if: env.CODE_EXISTS == 'true'
        run: |
          dotnet tool install --global PlantUmlClassDiagramGenerator --version 1.2.4
          dotnet tool restore

      - name: Create a folder for diagrams
        if: env.CODE_EXISTS == 'true'
        run: mkdir -p ${{ env.UML_OUTPUT_PATH }}

      - name: Generate PlantUML files
        if: env.CODE_EXISTS == 'true'
        run: puml-gen ${{ env.CODE_PATH }} ${{ env.UML_OUTPUT_PATH }} ${{ env.UMP_GENERATION_PARAMETERS }}

      - name: Get File names
        if: env.CODE_EXISTS == 'true'
        run: |
          UML_FILES=$(find ${{ env.UML_OUTPUT_PATH }} -name "*.puml" | tr '\n' ' ')
          echo "UML_FILES=${UML_FILES}" >> $GITHUB_ENV
        id: get_file_names

      - name: Generate SVG Diagrams
        if: env.CODE_EXISTS == 'true'
        uses: GeekOnly/plantuml-github-action@master
        with:
          args: -v -tsvg ${{ env.UML_FILES }}

      - uses: EndBug/add-and-commit@v7
        with:
          author_name: 'UML Bot'
          author_email: '41898282+uml-bot[bot]@users.noreply.github.com'
          message: 'Generate UML (${{ github.workflow }})'
